https://start.spring.io/

Globalement
Controller appelle Service appelle Repositiry

Annotation @RestController pour definir un web service
Annotation @RequestMapping("/path") ou mieux : @RequestMapping(method = method, value="path")
Annotation @Service
Annotation @Autowired : injection de dependance
Annotation @PathVariable - @RequesTMapping /path/{id} @PathVariable 
Annotation @RequestBody pour passer un objet avec la methode POST

video 7 Repository
Spring Data JPA (org.springframework.data.repository)
pom.xml spring-boot-starter-data-jpa
Pour persister les données on a utilisé MySQL (mysql-connector-j 8.1 compatible avec mon my sql 5.7)
config application.properties
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/develop
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

Entity
Annotation @GeneratedValue pour indiquer que id est auto increment
La table est créée automatiquement si elle n'existe pas !
La table prend le nom de la classe en lowerCase par defaut (sinon utiliser annotation @Table (name="")

Creer un repository par une interface extends CrudRepository(?,Id)
Injecter le Repository dans le Service






CREATE TABLE cars (
    id int NOT NULL AUTO_INCREMENT,
    model varchar(255) NOT NULL,
    brand varchar(255) NOT NULL,
    relesed_year varchar(255) NOT NULL,
    color varchar(255) NOT NULL,   
    PRIMARY KEY (id)
);


curl -X POST  -H 'Content-Type: application/json' -H 'Accept: application/json' -d '{"model":"SuperCinq","brand":"enault","year":1988,"color":"RED"}' http://localhost:8080/cars
curl -X POST  -H 'Content-Type: application/json' -H 'Accept: application/json' -d '{"model":"307SW","brand":"Peugeot","year":2010,"color":"BLUE"}' http://localhost:8080/cars